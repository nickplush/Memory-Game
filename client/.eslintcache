[{"/home/niko/work/pokeGame/poke-game/client/src/index.js":"1","/home/niko/work/pokeGame/poke-game/client/src/App.js":"2","/home/niko/work/pokeGame/poke-game/client/src/reducers/index.js":"3","/home/niko/work/pokeGame/poke-game/client/src/actions/gameInfoActions.js":"4","/home/niko/work/pokeGame/poke-game/client/src/components/page/gamePage/gamePage.js":"5","/home/niko/work/pokeGame/poke-game/client/src/components/page/ startPage/startPage.js":"6","/home/niko/work/pokeGame/poke-game/client/src/components/page/recordPage/recordsPage.js":"7","/home/niko/work/pokeGame/poke-game/client/src/components/page/gamePage/PlayingField.js":"8","/home/niko/work/pokeGame/poke-game/client/src/components/page/gamePage/Card.js":"9","/home/niko/work/pokeGame/poke-game/client/src/components/page/gamePage/modalWindow.js":"10","/home/niko/work/pokeGame/poke-game/client/src/components/router/Router.js":"11"},{"size":425,"mtime":1610791223097,"results":"12","hashOfConfig":"13"},{"size":366,"mtime":1611042718751,"results":"14","hashOfConfig":"13"},{"size":268,"mtime":1610799693767,"results":"15","hashOfConfig":"13"},{"size":220,"mtime":1610799848459,"results":"16","hashOfConfig":"13"},{"size":1564,"mtime":1611044011799,"results":"17","hashOfConfig":"13"},{"size":3067,"mtime":1610977793018,"results":"18","hashOfConfig":"13"},{"size":2492,"mtime":1611044064231,"results":"19","hashOfConfig":"13"},{"size":2142,"mtime":1611038764799,"results":"20","hashOfConfig":"13"},{"size":1677,"mtime":1611039251998,"results":"21","hashOfConfig":"13"},{"size":2351,"mtime":1611043656656,"results":"22","hashOfConfig":"13"},{"size":884,"mtime":1611043365713,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"zurq69",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/niko/work/pokeGame/poke-game/client/src/index.js",[],["50","51"],"/home/niko/work/pokeGame/poke-game/client/src/App.js",[],"/home/niko/work/pokeGame/poke-game/client/src/reducers/index.js",["52"],"export default function (state = {}, action) {\n    switch (action.type) {\n        case 'GET_INFO':\n            return action.payload\n        case 'CHANGE_RECORDS':\n            return {...state,records: action.payload}\n        default:\n            return state\n    }\n}\n","/home/niko/work/pokeGame/poke-game/client/src/actions/gameInfoActions.js",[],"/home/niko/work/pokeGame/poke-game/client/src/components/page/gamePage/gamePage.js",[],"/home/niko/work/pokeGame/poke-game/client/src/components/page/ startPage/startPage.js",["53","54"],"/home/niko/work/pokeGame/poke-game/client/src/components/page/recordPage/recordsPage.js",[],"/home/niko/work/pokeGame/poke-game/client/src/components/page/gamePage/PlayingField.js",["55","56"],"import React, {useEffect, useState} from 'react';\nimport {Grid} from \"@material-ui/core\";\nimport Card from \"./Card\";\nimport ModalWindow from \"./modalWindow\";\n\nconst PlayingField = ({array}) => {\n    const [state, setState] = useState([])\n    const [done, setDone] = useState([...array])\n    const [error, setError] = useState(0)\n    const [open, setOpen] = useState(false)\n    const [time, setTime] = useState(0)\n\n    useEffect(() => {\n        if (done.length === array.length / 2) {\n            setTime(new Date().getTime() - time)\n            setOpen(true)\n        }\n    }, [done])\n    useEffect(() => startGame(), [])\n    useEffect(() => {\n        if (state.length === 2) {\n            const check = state[0].id !== state[1].id && state[0].value === state[1].value\n            if (check) {\n                setDone([...done, state[0].value])\n            } else {\n                setError(error + 1)\n            }\n            setTimeout(() => setState([]), 800)\n        }\n    }, [state])\n\n    const restart = () => {\n        setDone([...array])\n        setOpen(false)\n        setError(0)\n        setTime(0)\n        startGame()\n    }\n\n    const startGame = () => {\n        setTimeout(() => {\n            setDone([])\n            const timeNow = new Date().getTime()\n            setTime(timeNow)\n            setState([])\n        }, 5000)\n    }\n\n    const checkValue = (newValue, i) => {\n        if (state.length < 2) {\n            setState([...state, {id: i, value: newValue}])\n        }\n    }\n\n    return (\n        <div>\n            <Grid container spacing={3} justify={\"center\"}>\n                {array.map((item, i) => <Card key={i}\n                                              id={i}\n                                              item={item}\n                                              done={done}\n                                              onClick={checkValue}\n                                              value={state}/>\n                )}\n            </Grid>\n            {open &&\n            <ModalWindow open={open} errors={error} time={time} restart={restart}/>\n            }\n        </div>\n    )\n}\n\nexport default PlayingField\n","/home/niko/work/pokeGame/poke-game/client/src/components/page/gamePage/Card.js",["57","58","59"],"import React, {useEffect, useState} from 'react';\nimport {Grid, makeStyles, Paper} from \"@material-ui/core\";\nimport fon from './images/fon.png'\n\nconst useStyles = makeStyles({\n    img: {\n        height: '30%',\n        width: 'auto'\n    },\n    logo: {\n        height: '60%',\n        width: 'auto'\n    },\n    container: {\n        margin: 0,\n        width: '100%',\n        padding: 20\n    }\n});\n\nconst Card = ({\n                  item,\n                  onClick,\n                  id,\n                  value,\n                  done\n              }) => {\n    const classes = useStyles()\n    const [isFlip, setIsFlip] = useState(false)\n\n    useEffect(() => checkFlip(), [value, done])\n\n    const checkFlip = () => {\n        const stateNames = value.map(item => item.id)\n        const inState = stateNames.indexOf(id)\n        const isDone = done.indexOf(item)\n        if (inState !== -1 || isDone !== -1) {\n            setIsFlip(true)\n        } else {\n            setIsFlip(false)\n        }\n    }\n\n    const checkValue = () => {\n        if (!isFlip) {\n            onClick(item, id)\n        }\n    }\n\n    return (\n        <Grid item xs={3} className={classes.container} onClick={checkValue}>\n            <div className={isFlip ? 'flip-container active' : 'flip-container'}>\n                <div className=\"flipper\">\n                    <Paper className=\"front\">\n                        <img className={classes.logo} src={fon}/>\n                    </Paper>\n                    <Paper className=\"back\">\n                        <img className={classes.img} src={item}/>\n                    </Paper>\n                </div>\n            </div>\n        </Grid>\n    )\n}\n\nexport default Card\n","/home/niko/work/pokeGame/poke-game/client/src/components/page/gamePage/modalWindow.js",["60","61"],"/home/niko/work/pokeGame/poke-game/client/src/components/router/Router.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","endLine":10,"endColumn":2},{"ruleId":"69","severity":1,"message":"70","line":79,"column":40,"nodeType":"71","endLine":79,"endColumn":42,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":84,"column":13,"nodeType":"75","endLine":84,"endColumn":55},{"ruleId":"69","severity":1,"message":"76","line":18,"column":8,"nodeType":"71","endLine":18,"endColumn":14,"suggestions":"77"},{"ruleId":"69","severity":1,"message":"78","line":30,"column":8,"nodeType":"71","endLine":30,"endColumn":15,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"80","line":31,"column":34,"nodeType":"71","endLine":31,"endColumn":47,"suggestions":"81"},{"ruleId":"73","severity":1,"message":"74","line":55,"column":25,"nodeType":"75","endLine":55,"endColumn":66},{"ruleId":"73","severity":1,"message":"74","line":58,"column":25,"nodeType":"75","endLine":58,"endColumn":66},{"ruleId":"69","severity":1,"message":"82","line":21,"column":56,"nodeType":"71","endLine":21,"endColumn":58,"suggestions":"83"},{"ruleId":"69","severity":1,"message":"84","line":22,"column":74,"nodeType":"71","endLine":22,"endColumn":76,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPlayersNames'. Either include it or remove the dependency array.","ArrayExpression",["88"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'array.length' and 'time'. Either include them or remove the dependency array. You can also do a functional update 'setTime(t => ...)' if you only need 'time' in the 'setTime' call.",["89"],"React Hook useEffect has missing dependencies: 'done' and 'error'. Either include them or remove the dependency array. You can also do a functional update 'setDone(d => ...)' if you only need 'done' in the 'setDone' call.",["90"],"React Hook useEffect has a missing dependency: 'checkFlip'. Either include it or remove the dependency array.",["91"],"React Hook useEffect has missing dependencies: 'dispatch' and 'results'. Either include them or remove the dependency array.",["92"],"React Hook useEffect has a missing dependency: 'gameInfo'. Either include it or remove the dependency array.",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [getPlayersNames]",{"range":"106","text":"107"},"Update the dependencies array to be: [array.length, done, time]",{"range":"108","text":"109"},"Update the dependencies array to be: [done, error, state]",{"range":"110","text":"111"},"Update the dependencies array to be: [value, done, checkFlip]",{"range":"112","text":"113"},"Update the dependencies array to be: [dispatch, results]",{"range":"114","text":"115"},"Update the dependencies array to be: [gameInfo]",{"range":"116","text":"117"},[2167,2169],"[getPlayersNames]",[576,582],"[array.length, done, time]",[980,987],"[done, error, state]",[666,679],"[value, done, checkFlip]",[1061,1063],"[dispatch, results]",[1138,1140],"[gameInfo]"]