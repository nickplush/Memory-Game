[{"/home/niko/work/pokeGame/poke-game/src/index.js":"1","/home/niko/work/pokeGame/poke-game/src/App.js":"2","/home/niko/work/pokeGame/poke-game/src/reportWebVitals.js":"3","/home/niko/work/pokeGame/poke-game/src/components/page/ startPage/startPage.js":"4","/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/gamePage.js":"5","/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/Card.js":"6","/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/PlayingField.js":"7"},{"size":500,"mtime":1610537986786,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1610607254414,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610537986790,"results":"11","hashOfConfig":"9"},{"size":2503,"mtime":1610623298699,"results":"12","hashOfConfig":"9"},{"size":556,"mtime":1610631445701,"results":"13","hashOfConfig":"9"},{"size":1410,"mtime":1610710477958,"results":"14","hashOfConfig":"9"},{"size":1405,"mtime":1610710477682,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"irz89o",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"/home/niko/work/pokeGame/poke-game/src/index.js",[],["34","35"],"/home/niko/work/pokeGame/poke-game/src/App.js",[],"/home/niko/work/pokeGame/poke-game/src/reportWebVitals.js",[],"/home/niko/work/pokeGame/poke-game/src/components/page/ startPage/startPage.js",["36"],"import React, {useEffect, useState} from 'react';\nimport {Button, makeStyles, TextField} from \"@material-ui/core\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        minHeight: '100vh',\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    button: {\n        margin: 25\n    }\n});\n\nconst StartPage = () => {\n    const gameData = JSON.parse(localStorage.getItem('game')) || {players: []}\n    const [names, setNames] = useState([])\n    const [value, setValue] = useState(gameData.lastPlayer || '');\n\n\n    const getPlayersNames = () => {\n        if (gameData.players) {\n            setNames(gameData.players)\n        }\n    }\n\n    const savePlayer = () => {\n        if (names.indexOf(value) === -1) {\n            names.push(value)\n        }\n        const newGameData = {...gameData, players: names, lastPlayer: value}\n        localStorage.setItem('game', JSON.stringify(newGameData))\n    }\n\n    const renderButton = () => {\n        if (!value) {\n            return (\n                <Button variant={\"contained\"}\n                        disabled\n                        className={classes.button}\n                >\n                    start\n                </Button>\n            )\n        }\n        return (\n            <Button variant={\"contained\"}\n                    color={\"primary\"}\n                    className={classes.button}\n                    onClick={savePlayer}\n            >\n                <Link to={'/game'}>start</Link>\n            </Button>\n        )\n    }\n\n    useEffect(() => getPlayersNames(), [])\n\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <br/>\n            <Autocomplete\n                onChange={(event, newValue) => {\n                    setValue(newValue);\n                }}\n                inputValue={value || ''}\n                onInputChange={(event, newValue) => {\n                    setValue(newValue);\n                }}\n                freeSolo\n                id=\"free-solo-demo\"\n                options={names.map((option) => option)}\n                style={{width: 300}}\n                renderInput={(params) => (\n                    <TextField {...params} label=\"Who are you?\" margin=\"normal\" variant=\"outlined\"/>\n                )}\n            />\n            {renderButton()}\n        </div>\n    )\n}\n\nexport default StartPage\n","/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/gamePage.js",[],"/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/Card.js",["37"],"/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/PlayingField.js",["38","39"],"import React, {useEffect, useState} from 'react';\nimport {Grid, Typography} from \"@material-ui/core\";\nimport Card from \"./Card\";\n\n\nconst PlayingField = ({array}) => {\n    const [state, setState] = useState([])\n    const [done, setDone] = useState([1,2,3,4,5,6,7,8])\n\n    useEffect(()=>nullDone(),[])\n    useEffect(()=> {\n        if (state.length === 2) {\n            const check = state[0].id !== state[1].id && state[0].value === state[1].value\n            if(check){\n                setDone([...done, state[0].value])\n            }\n            setTimeout(()=> setState([]), 800)\n        }\n    }, [state])\n\n    const nullDone = () => {\n        setTimeout(()=>setDone([]), 3000)\n    }\n\n    const checkValue = (newValue, i) => {\n        setState([...state, {id: i, value: newValue}])\n    }\n\n    return (\n        <div>\n            <Typography>\n                score: {score}\n            </Typography>\n            <Grid container spacing={12}>\n                {array.map((item, i) => <Card key={i}\n                                              id={i}\n                                              item={item}\n                                              done={done}\n                                              onClick={checkValue}\n                                              value={state}\n                    />\n                )}\n            </Grid>\n        </div>\n    )\n}\n\nexport default PlayingField\n",["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":62,"column":40,"nodeType":"48","endLine":62,"endColumn":42,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":22,"column":34,"nodeType":"48","endLine":22,"endColumn":47,"suggestions":"51"},{"ruleId":"46","severity":1,"message":"52","line":19,"column":8,"nodeType":"48","endLine":19,"endColumn":15,"suggestions":"53"},{"ruleId":"54","severity":2,"message":"55","line":32,"column":25,"nodeType":"56","messageId":"57","endLine":32,"endColumn":30},{"ruleId":"42","replacedBy":"58"},{"ruleId":"44","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPlayersNames'. Either include it or remove the dependency array.","ArrayExpression",["62"],"React Hook useEffect has a missing dependency: 'checkFlip'. Either include it or remove the dependency array.",["63"],"React Hook useEffect has a missing dependency: 'done'. Either include it or remove the dependency array. You can also do a functional update 'setDone(d => ...)' if you only need 'done' in the 'setDone' call.",["64"],"no-undef","'score' is not defined.","Identifier","undef",["60"],["61"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [getPlayersNames]",{"range":"71","text":"72"},"Update the dependencies array to be: [value, done, checkFlip]",{"range":"73","text":"74"},"Update the dependencies array to be: [done, state]",{"range":"75","text":"76"},[1698,1700],"[getPlayersNames]",[544,557],"[value, done, checkFlip]",[598,605],"[done, state]"]