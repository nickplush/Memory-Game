[{"/home/niko/work/pokeGame/poke-game/src/index.js":"1","/home/niko/work/pokeGame/poke-game/src/App.js":"2","/home/niko/work/pokeGame/poke-game/src/reportWebVitals.js":"3","/home/niko/work/pokeGame/poke-game/src/components/page/ startPage/startPage.js":"4","/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/gamePage.js":"5","/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/Card.js":"6","/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/PlayingField.js":"7","/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/modalWindow.js":"8","/home/niko/work/pokeGame/poke-game/src/reducers/index.js":"9","/home/niko/work/pokeGame/poke-game/src/actions/gameInfoActions.js":"10","/home/niko/work/pokeGame/poke-game/src/components/page/recordPage/recordsPage.js":"11"},{"size":425,"mtime":1610791223097,"results":"12","hashOfConfig":"13"},{"size":842,"mtime":1610953209832,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610537986790,"results":"15","hashOfConfig":"13"},{"size":3003,"mtime":1610956884009,"results":"16","hashOfConfig":"13"},{"size":1558,"mtime":1610970979986,"results":"17","hashOfConfig":"13"},{"size":1423,"mtime":1610970177086,"results":"18","hashOfConfig":"13"},{"size":2231,"mtime":1610971167984,"results":"19","hashOfConfig":"13"},{"size":2353,"mtime":1610963917327,"results":"20","hashOfConfig":"13"},{"size":268,"mtime":1610799693767,"results":"21","hashOfConfig":"13"},{"size":220,"mtime":1610799848459,"results":"22","hashOfConfig":"13"},{"size":2469,"mtime":1610806231975,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"irz89o",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/niko/work/pokeGame/poke-game/src/index.js",[],["51","52"],"/home/niko/work/pokeGame/poke-game/src/App.js",[],"/home/niko/work/pokeGame/poke-game/src/reportWebVitals.js",[],["53","54"],"/home/niko/work/pokeGame/poke-game/src/components/page/ startPage/startPage.js",["55","56"],"import React, {useEffect, useState} from 'react';\nimport {Button, makeStyles, TextField} from \"@material-ui/core\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {Link} from \"react-router-dom\";\nimport logo from './images/logo.png'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getGameInfo} from \"../../../actions/gameInfoActions\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        minHeight: '100vh',\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    button: {\n        background: \"black\",\n        color: \"white\",\n        margin: 25,\n        '&:hover': {\n            background: \"white\",\n            color: \"black\",\n        },\n    },\n    logo: {\n        maxWidth:'90%'\n    }\n});\n\nconst StartPage = () => {\n    const dispatch = useDispatch()\n    const gameData = useSelector(state => state)\n    const [names, setNames] = useState([])\n    const lastPlayers = gameData.lastPlayer || ''\n    const [value, setValue] = useState('');\n\n\n    const getPlayersNames = () => {\n        if (gameData.players) {\n            setNames(gameData.players)\n        }\n    }\n\n    const savePlayer = () => {\n        if (names.indexOf(value) === -1) {\n            names.push(value)\n        }\n        const newGameData = {...gameData, players: names, lastPlayer: value}\n        dispatch(getGameInfo(newGameData))\n    }\n\n    const renderButton = () => {\n        if (!value) {\n            return (\n                <Button variant={\"contained\"}\n                        disabled\n                        className={classes.button}\n                >\n                    start\n                </Button>\n            )\n        }\n        return (\n            <Link to={'/game'}>\n                <Button variant={\"contained\"}\n                        color={\"primary\"}\n                        className={classes.button}\n                        onClick={savePlayer}\n                >\n                    start\n                </Button>\n            </Link>\n        )\n    }\n\n    useEffect(() => getPlayersNames(), [])\n\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <img src={logo} className={classes.logo}/>\n            <br/>\n            <Autocomplete\n                value={lastPlayers}\n                onChange={(event, newValue) => {\n                    setValue(newValue);\n                }}\n                inputValue={value || ''}\n                onInputChange={(event, newValue) => {\n                    setValue(newValue);\n                }}\n                freeSolo\n                id=\"free-solo-demo\"\n                options={names.map((option) => option)}\n                style={{width: '300px'}}\n                renderInput={(params) => (\n                    <TextField {...params} label=\"Who are you?\" margin=\"normal\" variant=\"outlined\"/>\n                )}\n            />\n            {renderButton()}\n        </div>\n    )\n}\n\nexport default StartPage\n","/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/gamePage.js",[],"/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/Card.js",["57","58"],"/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/PlayingField.js",["59","60","61","62"],"/home/niko/work/pokeGame/poke-game/src/components/page/gamePage/modalWindow.js",["63","64"],"import React, {useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Link} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeRecords} from \"../../../actions/gameInfoActions\";\n\nconst ModalWindow = ({open, errors, time, restart}) => {\n    const dispatch = useDispatch()\n    const gameInfo = useSelector(state => state)\n    const timeIsSek = time / 1000\n    const score = 100\n    const scoreCof = 0.25\n    const playerScore = score - (scoreCof * (timeIsSek + errors * 5)) < 0 ? 0 : score - (scoreCof * (timeIsSek + errors * 5))\n    const results = {...gameInfo.records, [gameInfo.lastPlayer]: {score: Math.round(playerScore), time: timeIsSek}}\n\n    useEffect(() => {dispatch(changeRecords(results))},[])\n    useEffect(()=> {localStorage.setItem('game',JSON.stringify(gameInfo))},[])\n\n    return (\n        <Dialog\n            open={open}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{\"You made it!\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <div>errors: {errors}</div>\n                    <div>time: {timeIsSek} s</div>\n                    <div>score: {Math.round(playerScore)}</div>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Link to={'/game'}>\n                    <Button color=\"primary\" onClick={restart}>\n                        Restart Game\n                    </Button>\n                </Link>\n                <Link to={'/'}>\n                    <Button color=\"primary\">\n                        Reset Game\n                    </Button>\n                </Link>\n                <Link to={'/records'}>\n                    <Button color=\"primary\">\n                        Results\n                    </Button>\n                </Link>\n            </DialogActions>\n        </Dialog>\n    );\n}\nexport default ModalWindow\n","/home/niko/work/pokeGame/poke-game/src/reducers/index.js",["65"],"export default function (state = {}, action) {\n    switch (action.type) {\n        case 'GET_INFO':\n            return action.payload\n        case 'CHANGE_RECORDS':\n            return {...state,records: action.payload}\n        default:\n            return state\n    }\n}\n","/home/niko/work/pokeGame/poke-game/src/actions/gameInfoActions.js",[],"/home/niko/work/pokeGame/poke-game/src/components/page/recordPage/recordsPage.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":78,"column":40,"nodeType":"74","endLine":78,"endColumn":42,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":83,"column":13,"nodeType":"78","endLine":83,"endColumn":55},{"ruleId":"72","severity":1,"message":"79","line":24,"column":34,"nodeType":"74","endLine":24,"endColumn":47,"suggestions":"80"},{"ruleId":"76","severity":1,"message":"77","line":48,"column":25,"nodeType":"78","endLine":48,"endColumn":66},{"ruleId":"81","severity":1,"message":"82","line":13,"column":11,"nodeType":"83","messageId":"84","endLine":13,"endColumn":18},{"ruleId":"72","severity":1,"message":"85","line":25,"column":8,"nodeType":"74","endLine":25,"endColumn":14,"suggestions":"86"},{"ruleId":"72","severity":1,"message":"87","line":37,"column":8,"nodeType":"74","endLine":37,"endColumn":15,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":39,"column":11,"nodeType":"83","messageId":"84","endLine":39,"endColumn":18},{"ruleId":"72","severity":1,"message":"90","line":21,"column":56,"nodeType":"74","endLine":21,"endColumn":58,"suggestions":"91"},{"ruleId":"72","severity":1,"message":"92","line":22,"column":76,"nodeType":"74","endLine":22,"endColumn":78,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":1,"nodeType":"96","endLine":10,"endColumn":2},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPlayersNames'. Either include it or remove the dependency array.","ArrayExpression",["99"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'checkFlip'. Either include it or remove the dependency array.",["100"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'array.length' and 'time'. Either include them or remove the dependency array. You can also do a functional update 'setTime(t => ...)' if you only need 'time' in the 'setTime' call.",["101"],"React Hook useEffect has missing dependencies: 'done' and 'error'. Either include them or remove the dependency array. You can also do a functional update 'setDone(d => ...)' if you only need 'done' in the 'setDone' call.",["102"],"'restart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'results'. Either include them or remove the dependency array.",["103"],"React Hook useEffect has a missing dependency: 'gameInfo'. Either include it or remove the dependency array.",["104"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [getPlayersNames]",{"range":"117","text":"118"},"Update the dependencies array to be: [value, done, checkFlip]",{"range":"119","text":"120"},"Update the dependencies array to be: [array.length, done, time]",{"range":"121","text":"122"},"Update the dependencies array to be: [done, error, state]",{"range":"123","text":"124"},"Update the dependencies array to be: [dispatch, results]",{"range":"125","text":"126"},"Update the dependencies array to be: [gameInfo]",{"range":"127","text":"128"},[2103,2105],"[getPlayersNames]",[522,535],"[value, done, checkFlip]",[703,709],"[array.length, done, time]",[1107,1114],"[done, error, state]",[1061,1063],"[dispatch, results]",[1140,1142],"[gameInfo]"]